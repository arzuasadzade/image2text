import streamlit as st
from PIL import Image
import pytesseract

def extract_text_from_image(image):
    # Add your text extraction logic here
    # For example, using pytesseract to extract text from the image
    text = pytesseract.image_to_string(image)
    return text

def social_sharing_buttons():
    st.markdown(
        """<a href="https://twitter.com/share?ref_src=twsrc%5Etfw"
            class="twitter-share-button"
            data-text="Check out the text I extracted using this awesome app! ðŸš€ðŸ“·"
            data-url="https://share.streamlit.io/arzy/image-to-text-app"
            data-show-count="false">Tweet</a>
            <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>""",
        unsafe_allow_html=True
    )

    st.markdown(
        """<div class="fb-share-button"
            data-href="your_app_url"
            data-layout="button" data-size="small">
            <a target="_blank"
            href="https://www.facebook.com/sharer/sharer.php?u=your_app_url&src=sdkpreparse"
            class="fb-xfbml-parse-ignore">Share</a></div>
            <script async defer crossorigin="anonymous"
            src="https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v12.0&appId=your_facebook_app_id&autoLogAppEvents=1" 
            nonce="vagwDt4J"></script>""",
        unsafe_allow_html=True
    )

def main():
    st.title("Text Extraction from Images")

    uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

    if uploaded_file is not None:
        # Display the selected image
        image = Image.open(uploaded_file)
        st.image(image, caption="Uploaded Image", use_column_width=True)

        # Process the image and show progress
        with st.spinner("Processing image..."):
            # Simulate image processing delay (replace with your actual processing logic)
            import time
            time.sleep(2)

            # Extract text from the image
            extracted_text = extract_text_from_image(image)

        # Display the extracted text
        st.subheader("Extracted Text:")
        st.text(extracted_text)

        # Social sharing buttons
        st.subheader("Share your results:")
        social_sharing_buttons()

    else:
        st.warning("Please upload an image.")

if __name__ == "__main__":
    main()
